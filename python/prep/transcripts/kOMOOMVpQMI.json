{"speaker": "", "title": "Jorge Cotillo: IaC using ARM Templates, Template Specs & Deployment Scripts", "videoId": "kOMOOMVpQMI", "description": "This is a recording of the July 30, 2020 virtual meeting\n\nIaC using ARM Templates, Template Specs & Deployment Scripts - the last mile to configure your environment\n\nARM Templates are used to provision environments using a declarative approach. Often, people find themselves needing to use some tooling to configure Azure Control or Data Plane of provisioned resources to finalize that last mile to fully configure an Azure environment. Tooling such as Azure DevOps tasks (Powershell or Bash), Github Action tasks, or maybe CustomExtensions executed from within a Virtual Machine (for those more adventurous).\n\nAll these approaches work, but usually mean to grant additional access to external public IPs to access Azure Control and/or Data Plane operations, and don't forget the need to create a Service Principal to control RBAC permissions.\n\nNow, with Deployment Scripts (in Public Preview), you can run scripts (Azure Powershell or Azure Cli) inside an ARM template, and the best part, you can expose script outputs and pass them to other resources in your same template. Deployment Scripts are modeled as an ARM Template resource, which means, you can use all the goodies you have available in an ARM Template (e.g. copy function, dependsOn to describe dependencies, nested deployments pointing to different Resource Group and/or Subscription).\n\nWe'll analyze a few scenarios on what you can achieve with Deployment Scripts in both Powershell and Bash, we'll import modules, run python scripts, install dependencies, escape script arguments - pretty important - and how to ensure that your Deployment Scripts resource complies with your Enterprise Compliance regulations - super important as well.\n\nFinally, we'll talk about the new way to share this template inside your organization by using Template Specs (Private Preview - soon to be in Public Preview), Template Specs is a new way to stage your ARM Templates (and version them) as first class Azure Resources, which means, you can apply RBAC and Policy to manage Template access, it also means, no more Azure Storage Account to stage your ARM templates.\n\nGithub with the samples and presentation: https://github.com/jorgecotillo/boston_azure_2020\n\n\n\nSPEAKER BIO\nJorge Cotillo - Jorge has been coding since the age of 10 when he first printed a green square on a screen using Basic on a Commodore64, this event settled his passion ... passion for coding.\nHe's been in the consulting industry for around 12 years before moving into a position in Microsoft Azure as a Senior Software Engineer as part of the ARM Deployments team.\nSince joining ARM Deployments, he participated in different implementations/enhancements of the following services: Azure Blueprints, Deployment Scripts, VSCode Extension - Template engine evaluation, ARM Schema repo, bug bash session of Template Specs, the new ARM Template Language and much more to come ..."}